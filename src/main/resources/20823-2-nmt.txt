20823:

Native Memory Tracking:

Total: reserved=2641278KB, committed=2260198KB
-                 Java Heap (reserved=2146304KB, committed=2146304KB)
                            (mmap: reserved=2146304KB, committed=2146304KB) 
 
-                     Class (reserved=142516KB, committed=8500KB)
                            (classes #779)
                            (malloc=3252KB #904) 
                            (mmap: reserved=139264KB, committed=5248KB) 
 
-                    Thread (reserved=12360KB, committed=12360KB)
                            (thread #13)
                            (stack: reserved=12308KB, committed=12308KB)
                            (malloc=38KB #64) 
                            (arena=14KB #22)
 
-                      Code (reserved=249826KB, committed=2762KB)
                            (malloc=226KB #723) 
                            (mmap: reserved=249600KB, committed=2536KB) 
 
-                        GC (reserved=81886KB, committed=81886KB)
                            (malloc=3466KB #117) 
                            (mmap: reserved=78420KB, committed=78420KB) 
 
-                  Compiler (reserved=148KB, committed=148KB)
                            (malloc=17KB #52) 
                            (arena=131KB #5)
 
-                  Internal (reserved=6034KB, committed=6034KB)
                            (malloc=6002KB #1987) 
                            (mmap: reserved=32KB, committed=32KB) 
 
-                    Symbol (reserved=1807KB, committed=1807KB)
                            (malloc=1128KB #1094) 
                            (arena=680KB #1)
 
-    Native Memory Tracking (reserved=223KB, committed=223KB)
                            (malloc=118KB #1678) 
                            (tracking overhead=104KB)
 
-               Arena Chunk (reserved=174KB, committed=174KB)
                            (malloc=174KB) 
 
Virtual memory map:
 
[0x0000000775000000 - 0x00000007f8000000] reserved 2146304KB for Java Heap from
    [0x00007f7aa214ac84] ReservedHeapSpace::ReservedHeapSpace(unsigned long, unsigned long, bool, char*)+0xb4
    [0x00007f7aa211296f] Universe::reserve_heap(unsigned long, unsigned long)+0x3bf
    [0x00007f7aa1fb6a71] ParallelScavengeHeap::initialize()+0xe1
    [0x00007f7aa2112fca] Universe::initialize_heap()+0x16a

	[0x00000007cc580000 - 0x00000007f8000000] committed 715264KB from
            [0x00007f7aa2008686] PSVirtualSpace::expand_by(unsigned long)+0x56
            [0x00007f7aa200a5a6] PSYoungGen::initialize(ReservedSpace, unsigned long)+0x96
            [0x00007f7aa1938f94] AdjoiningGenerations::AdjoiningGenerations(ReservedSpace, GenerationSizer*, unsigned long)+0x2c4
            [0x00007f7aa1fb6bb2] ParallelScavengeHeap::initialize()+0x222

	[0x0000000775000000 - 0x00000007cc580000] committed 1431040KB from
            [0x00007f7aa2008686] PSVirtualSpace::expand_by(unsigned long)+0x56
            [0x00007f7aa1ff8f3c] PSOldGen::initialize(ReservedSpace, unsigned long, char const*, int)+0x8c
            [0x00007f7aa1938fce] AdjoiningGenerations::AdjoiningGenerations(ReservedSpace, GenerationSizer*, unsigned long)+0x2fe
            [0x00007f7aa1fb6bb2] ParallelScavengeHeap::initialize()+0x222
 
[0x00000007f8000000 - 0x0000000800000000] reserved 131072KB for Class from
    [0x00007f7aa214a021] ReservedSpace::ReservedSpace(unsigned long, unsigned long, bool, char*, unsigned long)+0x91
    [0x00007f7aa1f081bf] Metaspace::allocate_metaspace_compressed_klass_ptrs(char*, unsigned char*)+0x4f
    [0x00007f7aa1f08c74] Metaspace::global_initialize()+0x574
    [0x00007f7aa21132e1] universe_init()+0x61

	[0x00000007f8000000 - 0x00000007f80a0000] committed 640KB from
            [0x00007f7aa214bc20] VirtualSpace::expand_by(unsigned long, bool)+0x140
            [0x00007f7aa1f04d49] VirtualSpaceList::get_new_chunk(unsigned long, unsigned long)+0x1a9
            [0x00007f7aa1f052b0] Metaspace::get_initialization_chunk(Metaspace::MetaspaceType, Metaspace::MetadataType)+0x1c0
            [0x00007f7aa1f067f0] Metaspace::Metaspace(Mutex*, Metaspace::MetaspaceType)+0x2d0
 
[0x00007f7a7be80000 - 0x00007f7a80000000] reserved 67072KB for GC from
    [0x00007f7aa214a13d] ReservedSpace::ReservedSpace(unsigned long, unsigned long, bool, char*, unsigned long)+0x1ad
    [0x00007f7aa1fad089] ParMarkBitMap::initialize(MemRegion)+0xa9
    [0x00007f7aa2000afe] PSParallelCompact::initialize()+0x16e
    [0x00007f7aa1fb6d65] ParallelScavengeHeap::initialize()+0x3d5

	[0x00007f7a7be80000 - 0x00007f7a80000000] committed 67072KB from
            [0x00007f7aa2008686] PSVirtualSpace::expand_by(unsigned long)+0x56
            [0x00007f7aa1fad180] ParMarkBitMap::initialize(MemRegion)+0x1a0
            [0x00007f7aa2000afe] PSParallelCompact::initialize()+0x16e
            [0x00007f7aa1fb6d65] ParallelScavengeHeap::initialize()+0x3d5
 
[0x00007f7a86b4f000 - 0x00007f7a86c50000] reserved and committed 1028KB for Thread Stack from
    [0x00007f7aa196da99] attach_listener_thread_entry(JavaThread*, Thread*)+0x29
    [0x00007f7aa20f79eb] JavaThread::thread_main_inner()+0xdb
    [0x00007f7aa20f7cf1] JavaThread::run()+0x2d1
    [0x00007f7aa1f898c2] java_start(Thread*)+0x102
 
[0x00007f7a86c51000 - 0x00007f7a86d51000] reserved and committed 1024KB for Thread Stack from
    [0x00007f7aa1f898c2] java_start(Thread*)+0x102
 
[0x00007f7a86d51000 - 0x00007f7a86e52000] reserved and committed 1028KB for Thread Stack from
    [0x00007f7aa1f898c2] java_start(Thread*)+0x102
 
[0x00007f7a86e53000 - 0x00007f7a86f53000] reserved and committed 1024KB for Thread Stack from
    [0x00007f7aa1f898c2] java_start(Thread*)+0x102
 
[0x00007f7a86f54000 - 0x00007f7a87054000] reserved and committed 1024KB for Thread Stack from
    [0x00007f7aa1f898c2] java_start(Thread*)+0x102
 
[0x00007f7a87054000 - 0x00007f7a87155000] reserved and committed 1028KB for Thread Stack from
    [0x00007f7aa1f898c2] java_start(Thread*)+0x102
 
[0x00007f7a87155000 - 0x00007f7a87256000] reserved and committed 1028KB for Thread Stack from
    [0x00007f7aa1f898c2] java_start(Thread*)+0x102
 
[0x00007f7a87256000 - 0x00007f7a87357000] reserved and committed 1028KB for Thread Stack from
    [0x00007f7aa1f898c2] java_start(Thread*)+0x102
 
[0x00007f7a87358000 - 0x00007f7a87458000] reserved and committed 1024KB for Thread Stack from
    [0x00007f7aa2154dad] VMThread::run()+0x1d
    [0x00007f7aa1f898c2] java_start(Thread*)+0x102
 
[0x00007f7a8c02c000 - 0x00007f7a8c82c000] reserved 8192KB for Class from
    [0x00007f7aa214a13d] ReservedSpace::ReservedSpace(unsigned long, unsigned long, bool, char*, unsigned long)+0x1ad
    [0x00007f7aa1efecae] VirtualSpaceNode::VirtualSpaceNode(unsigned long)+0x16e
    [0x00007f7aa1f0471b] VirtualSpaceList::create_new_virtual_space(unsigned long) [clone .part.64]+0x3b
    [0x00007f7aa1f08ceb] Metaspace::global_initialize()+0x5eb

	[0x00007f7a8c46c000 - 0x00007f7a8c4ac000] committed 256KB from
            [0x00007f7aa214bc20] VirtualSpace::expand_by(unsigned long, bool)+0x140
            [0x00007f7aa1f04d49] VirtualSpaceList::get_new_chunk(unsigned long, unsigned long)+0x1a9
            [0x00007f7aa1f066c7] Metaspace::Metaspace(Mutex*, Metaspace::MetaspaceType)+0x1a7
            [0x00007f7aa1abd344] ClassLoaderData::metaspace_non_null()+0x124

	[0x00007f7a8c42c000 - 0x00007f7a8c46c000] committed 256KB from
            [0x00007f7aa214bc20] VirtualSpace::expand_by(unsigned long, bool)+0x140
            [0x00007f7aa1f04d49] VirtualSpaceList::get_new_chunk(unsigned long, unsigned long)+0x1a9
            [0x00007f7aa1f066c7] Metaspace::Metaspace(Mutex*, Metaspace::MetaspaceType)+0x1a7
            [0x00007f7aa1abd2f6] ClassLoaderData::metaspace_non_null()+0xd6

	[0x00007f7a8c02c000 - 0x00007f7a8c42c000] committed 4096KB from
            [0x00007f7aa214bc20] VirtualSpace::expand_by(unsigned long, bool)+0x140
            [0x00007f7aa1f04d49] VirtualSpaceList::get_new_chunk(unsigned long, unsigned long)+0x1a9
            [0x00007f7aa1f066c7] Metaspace::Metaspace(Mutex*, Metaspace::MetaspaceType)+0x1a7
            [0x00007f7aa1abd3c0] ClassLoaderData::metaspace_non_null()+0x1a0
 
[0x00007f7a8c82c000 - 0x00007f7a8cc44000] reserved 4192KB for GC from
    [0x00007f7aa214a13d] ReservedSpace::ReservedSpace(unsigned long, unsigned long, bool, char*, unsigned long)+0x1ad
    [0x00007f7aa2000820] ParallelCompactData::create_vspace(unsigned long, unsigned long)+0x80
    [0x00007f7aa2000b69] PSParallelCompact::initialize()+0x1d9
    [0x00007f7aa1fb6d65] ParallelScavengeHeap::initialize()+0x3d5

	[0x00007f7a8c82c000 - 0x00007f7a8cc44000] committed 4192KB from
            [0x00007f7aa2008686] PSVirtualSpace::expand_by(unsigned long)+0x56
            [0x00007f7aa20008e8] ParallelCompactData::create_vspace(unsigned long, unsigned long)+0x148
            [0x00007f7aa2000b69] PSParallelCompact::initialize()+0x1d9
            [0x00007f7aa1fb6d65] ParallelScavengeHeap::initialize()+0x3d5
 
[0x00007f7a8cc45000 - 0x00007f7a8cd45000] reserved and committed 1024KB for Thread Stack from
    [0x00007f7aa1c3f60c] GCTaskThread::run()+0x1c
    [0x00007f7aa1f898c2] java_start(Thread*)+0x102
 
[0x00007f7a8cd45000 - 0x00007f7a8d000000] reserved 2796KB for GC from
    [0x00007f7aa2149e5a] ReservedSpace::ReservedSpace(unsigned long, unsigned long)+0x10a
    [0x00007f7aa1f77c94] ObjectStartArray::initialize(MemRegion)+0x44
    [0x00007f7aa1ff8c27] PSOldGen::initialize_work(char const*, int)+0x47
    [0x00007f7aa1ff8f5d] PSOldGen::initialize(ReservedSpace, unsigned long, char const*, int)+0xad

	[0x00007f7a8cd45000 - 0x00007f7a8d000000] committed 2796KB from
            [0x00007f7aa2008686] PSVirtualSpace::expand_by(unsigned long)+0x56
            [0x00007f7aa1f77fd2] ObjectStartArray::set_covered_region(MemRegion)+0x82
            [0x00007f7aa1ff8d97] PSOldGen::initialize_work(char const*, int)+0x1b7
            [0x00007f7aa1ff8f5d] PSOldGen::initialize(ReservedSpace, unsigned long, char const*, int)+0xad
 
[0x00007f7a8d000000 - 0x00007f7a9c000000] reserved 245760KB for Code from
    [0x00007f7aa214b1e7] ReservedCodeSpace::ReservedCodeSpace(unsigned long, unsigned long, bool)+0x77
    [0x00007f7aa1c87801] CodeHeap::reserve(unsigned long, unsigned long, unsigned long)+0xd1
    [0x00007f7aa1ad720a] codeCache_init()+0x7a
    [0x00007f7aa1cae0fc] init_globals()+0x3c

	[0x00007f7a8d000000 - 0x00007f7a8d270000] committed 2496KB from
            [0x00007f7aa214b69c] VirtualSpace::initialize(ReservedSpace, unsigned long)+0x20c
            [0x00007f7aa1c87854] CodeHeap::reserve(unsigned long, unsigned long, unsigned long)+0x124
            [0x00007f7aa1ad720a] codeCache_init()+0x7a
            [0x00007f7aa1cae0fc] init_globals()+0x3c
 
[0x00007f7aa002d000 - 0x00007f7aa012d000] reserved and committed 1024KB for Thread Stack from
    [0x00007f7aa1c3f60c] GCTaskThread::run()+0x1c
    [0x00007f7aa1f898c2] java_start(Thread*)+0x102
 
[0x00007f7aa012d000 - 0x00007f7aa0546000] reserved 4196KB for GC from
    [0x00007f7aa214a13d] ReservedSpace::ReservedSpace(unsigned long, unsigned long, bool, char*, unsigned long)+0x1ad
    [0x00007f7aa1a4e964] CardTableModRefBS::initialize()+0xf4
    [0x00007f7aa1fb6b37] ParallelScavengeHeap::initialize()+0x1a7
    [0x00007f7aa2112fca] Universe::initialize_heap()+0x16a

	[0x00007f7aa0545000 - 0x00007f7aa0546000] committed 4KB from
            [0x00007f7aa1a4ea1e] CardTableModRefBS::initialize()+0x1ae
            [0x00007f7aa1fb6b37] ParallelScavengeHeap::initialize()+0x1a7
            [0x00007f7aa2112fca] Universe::initialize_heap()+0x16a
            [0x00007f7aa21132b3] universe_init()+0x33

	[0x00007f7aa03e7000 - 0x00007f7aa0545000] committed 1400KB from
            [0x00007f7aa1a4f0de] CardTableModRefBS::resize_covered_region(MemRegion)+0x22e
            [0x00007f7aa1a4e090] CardTableExtension::resize_covered_region(MemRegion)+0xa0
            [0x00007f7aa200a1f3] PSYoungGen::initialize_work()+0x63
            [0x00007f7aa200a5c0] PSYoungGen::initialize(ReservedSpace, unsigned long)+0xb0

	[0x00007f7aa012d000 - 0x00007f7aa03e7000] committed 2792KB from
            [0x00007f7aa1a4f0de] CardTableModRefBS::resize_covered_region(MemRegion)+0x22e
            [0x00007f7aa1a4e090] CardTableExtension::resize_covered_region(MemRegion)+0xa0
            [0x00007f7aa1ff8c76] PSOldGen::initialize_work(char const*, int)+0x96
            [0x00007f7aa1ff8f5d] PSOldGen::initialize(ReservedSpace, unsigned long, char const*, int)+0xad
 
[0x00007f7aa0546000 - 0x00007f7aa0906000] reserved 3840KB for Code from
    [0x00007f7aa2149e5a] ReservedSpace::ReservedSpace(unsigned long, unsigned long)+0x10a
    [0x00007f7aa1c8791e] CodeHeap::reserve(unsigned long, unsigned long, unsigned long)+0x1ee
    [0x00007f7aa1ad720a] codeCache_init()+0x7a
    [0x00007f7aa1cae0fc] init_globals()+0x3c

	[0x00007f7aa0546000 - 0x00007f7aa0550000] committed 40KB from
            [0x00007f7aa214b69c] VirtualSpace::initialize(ReservedSpace, unsigned long)+0x20c
            [0x00007f7aa1c8793d] CodeHeap::reserve(unsigned long, unsigned long, unsigned long)+0x20d
            [0x00007f7aa1ad720a] codeCache_init()+0x7a
            [0x00007f7aa1cae0fc] init_globals()+0x3c
 
[0x00007f7aa3153000 - 0x00007f7aa317c000] reserved 164KB for GC from
    [0x00007f7aa214a13d] ReservedSpace::ReservedSpace(unsigned long, unsigned long, bool, char*, unsigned long)+0x1ad
    [0x00007f7aa2000820] ParallelCompactData::create_vspace(unsigned long, unsigned long)+0x80
    [0x00007f7aa2000b2f] PSParallelCompact::initialize()+0x19f
    [0x00007f7aa1fb6d65] ParallelScavengeHeap::initialize()+0x3d5

	[0x00007f7aa3153000 - 0x00007f7aa317c000] committed 164KB from
            [0x00007f7aa2008686] PSVirtualSpace::expand_by(unsigned long)+0x56
            [0x00007f7aa20008e8] ParallelCompactData::create_vspace(unsigned long, unsigned long)+0x148
            [0x00007f7aa2000b2f] PSParallelCompact::initialize()+0x19f
            [0x00007f7aa1fb6d65] ParallelScavengeHeap::initialize()+0x3d5
 
[0x00007f7aa317d000 - 0x00007f7aa327d000] reserved and committed 1024KB for Thread Stack from
    [0x00007f7aa20f5787] Threads::create_vm(JavaVMInitArgs*, bool*)+0x1a7
    [0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
    [0x00007f7aa2c3eee4] JavaMain+0x84
 
[0x00007f7aa3281000 - 0x00007f7aa3289000] reserved and committed 32KB for Internal from
    [0x00007f7aa1fdc841] PerfMemory::create_memory_region(unsigned long)+0xa41
    [0x00007f7aa1fdb24a] perfMemory_init()+0x4a
    [0x00007f7aa20f574e] Threads::create_vm(JavaVMInitArgs*, bool*)+0x16e
    [0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
Details:

[0x00007f7aa2001dd5] PSPromotionManager::PSPromotionManager()+0x425
[0x00007f7aa2003e25] PaddedArray<PSPromotionManager, (MemoryType)5, 64ul>::create_unfreeable(unsigned int)+0xe5
[0x00007f7aa2002ff8] PSPromotionManager::initialize()+0x48
[0x00007f7aa2111a9a] universe_post_init()+0x9aa
                             (malloc=3072KB type=Class #3)

[0x00007f7aa1ff26fa] ParCompactionManager::initialize(ParMarkBitMap*)+0x71a
[0x00007f7aa2000d33] PSParallelCompact::post_initialize()+0xb3
[0x00007f7aa1fb4c75] ParallelScavengeHeap::post_initialize()+0x25
[0x00007f7aa2111a9a] universe_post_init()+0x9aa
                             (malloc=3072KB type=Internal #3)

[0x00007f7aa1ff0685] ParCompactionManager::ParCompactionManager()+0x345
[0x00007f7aa1ff2627] ParCompactionManager::initialize(ParMarkBitMap*)+0x647
[0x00007f7aa2000d33] PSParallelCompact::post_initialize()+0xb3
[0x00007f7aa1fb4c75] ParallelScavengeHeap::post_initialize()+0x25
                             (malloc=2048KB type=GC #2)

[0x00007f7aa1bd9eaa] ElfStringTable::ElfStringTable(_IO_FILE*, Elf64_Shdr, int)+0x4a
[0x00007f7aa1bd98b5] ElfFile::load_tables()+0x155
[0x00007f7aa1b60235] ElfDecoder::decode(unsigned char*, char*, int, int*, char const*)+0xa5
[0x00007f7aa1b5faaa] Decoder::decode(unsigned char*, char*, int, int*, char const*)+0xea
                             (malloc=1656KB type=Internal #3)

[0x00007f7aa1ff0685] ParCompactionManager::ParCompactionManager()+0x345
[0x00007f7aa1ff273a] ParCompactionManager::initialize(ParMarkBitMap*)+0x75a
[0x00007f7aa2000d33] PSParallelCompact::post_initialize()+0xb3
[0x00007f7aa1fb4c75] ParallelScavengeHeap::post_initialize()+0x25
                             (malloc=1024KB type=GC #1)

[0x00007f7aa1bda124] ElfSymbolTable::ElfSymbolTable(_IO_FILE*, Elf64_Shdr)+0x64
[0x00007f7aa1bd9930] ElfFile::load_tables()+0x1d0
[0x00007f7aa1b60235] ElfDecoder::decode(unsigned char*, char*, int, int*, char const*)+0xa5
[0x00007f7aa1b5faaa] Decoder::decode(unsigned char*, char*, int, int*, char const*)+0xea
                             (malloc=1000KB type=Internal #2)

[0x00007f7aa2113790] universe_init()+0x510
[0x00007f7aa1cae110] init_globals()+0x50
[0x00007f7aa20f59e9] Threads::create_vm(JavaVMInitArgs*, bool*)+0x409
[0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
                             (malloc=469KB type=Symbol #1)

[0x00007f7aa1c85aa5] BasicHashtable<(MemoryType)9>::new_entry(unsigned int)+0x175
[0x00007f7aa1c85af1] Hashtable<Symbol*, (MemoryType)9>::new_entry(unsigned int, Symbol*)+0x11
[0x00007f7aa20b2914] SymbolTable::basic_add(ClassLoaderData*, constantPoolHandle, int, char const**, int*, int*, unsigned int*, Thread*)+0x214
[0x00007f7aa20b2af7] SymbolTable::add(ClassLoaderData*, constantPoolHandle, int, char const**, int*, int*, unsigned int*, Thread*)+0xb7
                             (malloc=376KB type=Symbol #47)

[0x00007f7aa20b0e39] SymbolTable::initialize_symbols(int)+0x69
[0x00007f7aa211362c] universe_init()+0x3ac
[0x00007f7aa1cae110] init_globals()+0x50
[0x00007f7aa20f59e9] Threads::create_vm(JavaVMInitArgs*, bool*)+0x409
                             (malloc=360KB type=Arena Chunk #1)

[0x00007f7aa1ff076d] ParCompactionManager::ParCompactionManager()+0x42d
[0x00007f7aa1ff2627] ParCompactionManager::initialize(ParMarkBitMap*)+0x647
[0x00007f7aa2000d33] PSParallelCompact::post_initialize()+0xb3
[0x00007f7aa1fb4c75] ParallelScavengeHeap::post_initialize()+0x25
                             (malloc=256KB type=GC #2)

[0x00007f7aa1acf7ed] CodeBlob::set_oop_maps(OopMapSet*) [clone .part.5]+0xed
[0x00007f7aa1acfbe3] CodeBlob::CodeBlob(char const*, CodeBuffer*, int, int, int, int, OopMapSet*)+0xe3
[0x00007f7aa1f5807d] nmethod::nmethod(Method*, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int)+0x4d
[0x00007f7aa1f58a09] nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int)+0x219
                             (malloc=191KB type=Code #377)

[0x00007f7aa2113800] universe_init()+0x580
[0x00007f7aa1cae110] init_globals()+0x50
[0x00007f7aa20f59e9] Threads::create_vm(JavaVMInitArgs*, bool*)+0x409
[0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
                             (malloc=156KB type=Symbol #1)

[0x00007f7aa1ff076d] ParCompactionManager::ParCompactionManager()+0x42d
[0x00007f7aa1ff273a] ParCompactionManager::initialize(ParMarkBitMap*)+0x75a
[0x00007f7aa2000d33] PSParallelCompact::post_initialize()+0xb3
[0x00007f7aa1fb4c75] ParallelScavengeHeap::post_initialize()+0x25
                             (malloc=128KB type=GC #1)

[0x00007f7aa1ec4870] MallocSiteTable::new_entry(NativeCallStack const&, MemoryType)+0x0
[0x00007f7aa1ec48e0] MallocSiteTable::lookup_or_add(NativeCallStack const&, unsigned long*, unsigned long*, MemoryType)+0x0
[0x00007f7aa1ec5100] MallocSiteTable::allocation_at(NativeCallStack const&, unsigned long, unsigned long*, unsigned long*, MemoryType)+0x0
                             (malloc=115KB type=Native Memory Tracking #1639)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa20b29f9] SymbolTable::basic_add(ClassLoaderData*, constantPoolHandle, int, char const**, int*, int*, unsigned int*, Thread*)+0x2f9
[0x00007f7aa20b2af7] SymbolTable::add(ClassLoaderData*, constantPoolHandle, int, char const**, int*, int*, unsigned int*, Thread*)+0xb7
                             (malloc=96KB type=Arena Chunk #3)

[0x00007f7aa1b582f4] ConstantPool::allocate(ClassLoaderData*, int, Thread*)+0x124
[0x00007f7aa1ab2369] ClassFileParser::parse_constant_pool(Thread*)+0xf9
[0x00007f7aa1ab36f7] ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray<Handle>*, TempNewSymbol&, bool, Thread*)+0x587
[0x00007f7aa1abae13] ClassLoader::load_classfile(Symbol*, Thread*)+0x473
                             (malloc=79KB type=Internal #676)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa1ed8b40] Matcher::Label_Root(Node const*, State*, Node*, Node const*)+0x450
[0x00007f7aa1ed8afd] Matcher::Label_Root(Node const*, State*, Node*, Node const*)+0x40d
                             (malloc=64KB type=Arena Chunk #2)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa19429ee] Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum)+0x12e
[0x00007f7aa1f62a17] Node_Array::grow(unsigned int)+0x57
                             (malloc=64KB type=Arena Chunk #2)

[0x00007f7aa1c85aa5] BasicHashtable<(MemoryType)9>::new_entry(unsigned int)+0x175
[0x00007f7aa1c85b11] Hashtable<oopDesc*, (MemoryType)9>::new_entry(unsigned int, oopDesc*)+0x11
[0x00007f7aa20b3129] StringTable::basic_add(int, Handle, unsigned short*, int, unsigned int, Thread*)+0xc9
[0x00007f7aa20b366f] StringTable::intern(Handle, unsigned short*, int, Thread*)+0x16f
                             (malloc=48KB type=Symbol #6)

[0x00007f7aa20af4b5] Symbol::operator new(unsigned long, int, Thread*)+0xf5
[0x00007f7aa20b28cc] SymbolTable::basic_add(ClassLoaderData*, constantPoolHandle, int, char const**, int*, int*, unsigned int*, Thread*)+0x1cc
[0x00007f7aa20b2af7] SymbolTable::add(ClassLoaderData*, constantPoolHandle, int, char const**, int*, int*, unsigned int*, Thread*)+0xb7
[0x00007f7aa1aad654] ClassFileParser::parse_constant_pool_entries(int, Thread*)+0xc94
                             (malloc=36KB type=Symbol #824)

[0x00007f7aa1c851d5] BasicHashtable<(MemoryType)1>::new_entry(unsigned int)+0x175
[0x00007f7aa1c85281] Hashtable<Symbol*, (MemoryType)1>::new_entry(unsigned int, Symbol*)+0x11
[0x00007f7aa1fe5906] PlaceholderTable::find_and_add(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Symbol*, Thread*)+0x106
[0x00007f7aa20bf5dd] SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*)+0x73d
                             (malloc=32KB type=Class #1)

[0x00007f7aa1c851d5] BasicHashtable<(MemoryType)1>::new_entry(unsigned int)+0x175
[0x00007f7aa1c85241] Hashtable<Klass*, (MemoryType)1>::new_entry(unsigned int, Klass*)+0x11
[0x00007f7aa1bc7095] Dictionary::add_klass(Symbol*, ClassLoaderData*, KlassHandle)+0x75
[0x00007f7aa20b9d95] SystemDictionary::update_dictionary(int, unsigned int, int, unsigned int, instanceKlassHandle, Handle, Thread*)+0x105
                             (malloc=32KB type=Class #2)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa1953d4f] Handle::Handle(oopDesc*)+0x8f
[0x00007f7aa1d07621] java_lang_Class::create_mirror(KlassHandle, Handle, Handle, Thread*)+0x71
                             (malloc=32KB type=Arena Chunk #1)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa1bbf876] JMXStartRemoteDCmd::num_arguments()+0x46
[0x00007f7aa1bbfdc5] DCmdRegistrant::register_dcmds()+0x3d5
                             (malloc=32KB type=Arena Chunk #1)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa1bc54ed] Dict::Dict(int (*)(void const*, void const*), int (*)(void const*), Arena*, int)+0x10d
[0x00007f7aa210c491] Type::Initialize(Compile*)+0x81
                             (malloc=32KB type=Arena Chunk #1)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa19f9955] LIRGenerator::do_ProfileCall(ProfileCall*)+0xd5
[0x00007f7aa19ee38d] non-virtual thunk to LIRGenerator::block_do(BlockBegin*)+0x14d
                             (malloc=32KB type=Arena Chunk #1)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa1af495f] Compile::Init(int)+0xe3f
[0x00007f7aa1afb33a] Compile::Compile(ciEnv*, TypeFunc const* (*)(), unsigned char*, char const*, int, bool, bool, bool)+0x59a
                             (malloc=32KB type=Arena Chunk #1)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa1c64fd6] GraphKit::gen_stub(unsigned char*, char const*, int, bool, bool)+0x3e6
[0x00007f7aa1afb485] Compile::Compile(ciEnv*, TypeFunc const* (*)(), unsigned char*, char const*, int, bool, bool, bool)+0x6e5
                             (malloc=32KB type=Arena Chunk #1)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa1a18939] LinearScan::build_intervals()+0x39
[0x00007f7aa1a1ba60] LinearScan::do_linear_scan()+0x40
                             (malloc=32KB type=Arena Chunk #1)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa1f6025d] Node::clone() const+0x35d
[0x00007f7aa1eddcc2] Matcher::xform(Node*, int)+0x772
                             (malloc=32KB type=Arena Chunk #1)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa1b6983c] DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray<Method*>*, Thread*)+0x1acc
[0x00007f7aa1ab458a] ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray<Handle>*, TempNewSymbol&, bool, Thread*)+0x141a
                             (malloc=32KB type=Arena Chunk #1)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa1b68a2d] DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray<Method*>*, Thread*)+0xcbd
[0x00007f7aa1ab458a] ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray<Handle>*, TempNewSymbol&, bool, Thread*)+0x141a
                             (malloc=32KB type=Arena Chunk #1)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa1bc54ed] Dict::Dict(int (*)(void const*, void const*), int (*)(void const*), Arena*, int)+0x10d
[0x00007f7aa210af0f] Type::Initialize_shared(Compile*)+0x9f
                             (malloc=32KB type=Arena Chunk #1)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19426c2] Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)+0x42
[0x00007f7aa194317f] Handle::Handle(Thread*, oopDesc*)+0x7f
[0x00007f7aa20beef5] SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*)+0x55
                             (malloc=32KB type=Arena Chunk #1)

[0x00007f7aa1c85aa5] BasicHashtable<(MemoryType)9>::new_entry(unsigned int)+0x175
[0x00007f7aa1c85af1] Hashtable<Symbol*, (MemoryType)9>::new_entry(unsigned int, Symbol*)+0x11
[0x00007f7aa20b1ad0] SymbolTable::basic_add(int, unsigned char*, int, unsigned int, bool, Thread*)+0x180
[0x00007f7aa20b23cc] SymbolTable::new_permanent_symbol(char const*, Thread*)+0x14c
                             (malloc=24KB type=Symbol #3)

[0x00007f7aa20b6a15] ObjectSynchronizer::omAlloc(Thread*)+0x6c5
[0x00007f7aa20b6b00] ObjectSynchronizer::inflate(Thread*, oopDesc*)+0x60
[0x00007f7aa20b74ba] ObjectSynchronizer::wait(Handle, long, Thread*)+0x3a
[0x00007f7aa1d6f928] JVM_MonitorWait+0x98
                             (malloc=22KB type=Internal #1)

[0x00007f7aa1c851d5] BasicHashtable<(MemoryType)1>::new_entry(unsigned int)+0x175
[0x00007f7aa1c85261] Hashtable<oopDesc*, (MemoryType)1>::new_entry(unsigned int, oopDesc*)+0x11
[0x00007f7aa1bc7bb1] ProtectionDomainCacheTable::get(oopDesc*)+0x91
[0x00007f7aa1bc8bd5] Dictionary::add_protection_domain(int, unsigned int, instanceKlassHandle, ClassLoaderData*, Handle, Thread*)+0xb5
                             (malloc=16KB type=Class #1)

[0x00007f7aa1bc88f1] Dictionary::Dictionary(int)+0x2a1
[0x00007f7aa20c1c7b] SystemDictionary::initialize(Thread*)+0x5b
[0x00007f7aa2110068] Universe::genesis(Thread*)+0x3b8
[0x00007f7aa21110ac] universe2_init()+0x2c
                             (malloc=16KB type=Class #1)

[0x00007f7aa1abd98a] ClassLoaderData::add_handle(Handle)+0x8a
[0x00007f7aa1b4b8c5] ConstantPool::initialize_resolved_references(ClassLoaderData*, intStack, int, Thread*)+0x1e5
[0x00007f7aa202e9ee] Rewriter::Rewriter(instanceKlassHandle, constantPoolHandle, Array<Method*>*, Thread*)+0x30e
[0x00007f7aa202f2ba] Rewriter::rewrite(instanceKlassHandle, Thread*)+0x8a
                             (malloc=11KB type=Class #43)

[0x00007f7aa1f7d57d] OopMapCache::OopMapCache()+0x13d
[0x00007f7aa1cbf8ce] InstanceKlass::mask_for(methodHandle, int, InterpreterOopMap*)+0x21e
[0x00007f7aa1f10841] Method::mask_for(int, InterpreterOopMap*)+0xb1
[0x00007f7aa1bf9b41] frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool)+0x561
                             (malloc=11KB type=Class #6)

[0x00007f7aa1ad9f63] CollectedHeap::CollectedHeap()+0x193
[0x00007f7aa211309e] Universe::initialize_heap()+0x23e
[0x00007f7aa21132b3] universe_init()+0x33
[0x00007f7aa1cae110] init_globals()+0x50
                             (malloc=10KB type=Internal #1)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19417fb] Arena::Arena(MemoryType, unsigned long)+0x14b
[0x00007f7aa1ed72db] Matcher::Matcher()+0x3b
[0x00007f7aa1afaa47] Compile::Code_Gen()+0x47
                             (malloc=10KB type=Arena Chunk #1)

[0x00007f7aa1bda124] ElfSymbolTable::ElfSymbolTable(_IO_FILE*, Elf64_Shdr)+0x64
[0x00007f7aa1bd9930] ElfFile::load_tables()+0x1d0
[0x00007f7aa1b60235] ElfDecoder::decode(unsigned char*, char*, int, int*, char const*)+0xa5
[0x00007f7aa1b5fa2e] Decoder::decode(unsigned char*, char*, int, int*, char const*)+0x6e
                             (malloc=10KB type=Internal #2)

[0x00007f7aa1abdcb2] ClassLoaderData::anonymous_class_loader_data(oopDesc*, Thread*)+0x82
[0x00007f7aa20c2487] SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, KlassHandle, GrowableArray<Handle>*, Thread*)+0xc7
[0x00007f7aa211e65a] Unsafe_DefineAnonymousClass+0x59a
[0x00007f7a8d0186c7]
                             (malloc=9KB type=Internal #81)

[0x00007f7aa1b582f4] ConstantPool::allocate(ClassLoaderData*, int, Thread*)+0x124
[0x00007f7aa1ab2369] ClassFileParser::parse_constant_pool(Thread*)+0xf9
[0x00007f7aa1ab36f7] ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray<Handle>*, TempNewSymbol&, bool, Thread*)+0x587
[0x00007f7aa20c2508] SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, KlassHandle, GrowableArray<Handle>*, Thread*)+0x148
                             (malloc=9KB type=Internal #81)

[0x00007f7aa1c86575] BasicHashtable<(MemoryType)4>::new_entry(unsigned int)+0x175
[0x00007f7aa2046e21] AdapterHandlerLibrary::new_entry(AdapterFingerPrint*, unsigned char*, unsigned char*, unsigned char*)+0xe1
[0x00007f7aa2052efe] SharedRuntime::generate_i2c2i_adapters(MacroAssembler*, int, int, BasicType const*, VMRegPair const*, AdapterFingerPrint*)+0xfae
[0x00007f7aa2049936] AdapterHandlerLibrary::get_adapter(methodHandle)+0xe26
                             (malloc=8KB type=Code #2)

[0x00007f7aa1fe53dd] PlaceholderTable::PlaceholderTable(int)+0x12d
[0x00007f7aa20c1ca1] SystemDictionary::initialize(Thread*)+0x81
[0x00007f7aa2110068] Universe::genesis(Thread*)+0x3b8
[0x00007f7aa21110ac] universe2_init()+0x2c
                             (malloc=8KB type=Class #1)

[0x00007f7aa1bc88a5] Dictionary::Dictionary(int)+0x255
[0x00007f7aa20c1c7b] SystemDictionary::initialize(Thread*)+0x5b
[0x00007f7aa2110068] Universe::genesis(Thread*)+0x3b8
[0x00007f7aa21110ac] universe2_init()+0x2c
                             (malloc=8KB type=Class #1)

[0x00007f7aa1f0676a] Metaspace::Metaspace(Mutex*, Metaspace::MetaspaceType)+0x24a
[0x00007f7aa1abd344] ClassLoaderData::metaspace_non_null()+0x124
[0x00007f7aa1f07dc3] Metaspace::allocate(ClassLoaderData*, unsigned long, bool, MetaspaceObj::Type, Thread*)+0x43
[0x00007f7aa1b58211] ConstantPool::allocate(ClassLoaderData*, int, Thread*)+0x41
                             (malloc=7KB type=Class #81)

[0x00007f7aa1f06544] Metaspace::Metaspace(Mutex*, Metaspace::MetaspaceType)+0x24
[0x00007f7aa1abd344] ClassLoaderData::metaspace_non_null()+0x124
[0x00007f7aa1f07dc3] Metaspace::allocate(ClassLoaderData*, unsigned long, bool, MetaspaceObj::Type, Thread*)+0x43
[0x00007f7aa1b58211] ConstantPool::allocate(ClassLoaderData*, int, Thread*)+0x41
                             (malloc=7KB type=Class #81)

[0x00007f7aa1acf7ed] CodeBlob::set_oop_maps(OopMapSet*) [clone .part.5]+0xed
[0x00007f7aa1ad13ac] RuntimeStub::new_runtime_stub(char const*, CodeBuffer*, int, int, OopMapSet*, bool)+0x28c
[0x00007f7aa1a2d456] Runtime1::generate_blob_for(BufferBlob*, Runtime1::StubID)+0x146
[0x00007f7aa1a2d4f5] Runtime1::initialize(BufferBlob*)+0x25
                             (malloc=7KB type=Code #29)

[0x00007f7aa20af4b5] Symbol::operator new(unsigned long, int, Thread*)+0xf5
[0x00007f7aa20b28cc] SymbolTable::basic_add(ClassLoaderData*, constantPoolHandle, int, char const**, int*, int*, unsigned int*, Thread*)+0x1cc
[0x00007f7aa20b2af7] SymbolTable::add(ClassLoaderData*, constantPoolHandle, int, char const**, int*, int*, unsigned int*, Thread*)+0xb7
[0x00007f7aa1aacba8] ClassFileParser::parse_constant_pool_entries(int, Thread*)+0x1e8
                             (malloc=7KB type=Symbol #123)

[0x00007f7aa1abdc88] ClassLoaderData::anonymous_class_loader_data(oopDesc*, Thread*)+0x58
[0x00007f7aa20c2487] SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, KlassHandle, GrowableArray<Handle>*, Thread*)+0xc7
[0x00007f7aa211e65a] Unsafe_DefineAnonymousClass+0x59a
[0x00007f7a8d0186c7]
                             (malloc=6KB type=Class #81)

[0x00007f7aa20ebf9d] Thread::allocate(unsigned long, bool, MemoryType)+0x30d
[0x00007f7aa1d74a90] JVM_StartThread+0xe0
[0x00007f7a8d0186c7]
                             (malloc=6KB type=Thread #2)

[0x00007f7aa1bd9eaa] ElfStringTable::ElfStringTable(_IO_FILE*, Elf64_Shdr, int)+0x4a
[0x00007f7aa1bd98b5] ElfFile::load_tables()+0x155
[0x00007f7aa1b60235] ElfDecoder::decode(unsigned char*, char*, int, int*, char const*)+0xa5
[0x00007f7aa1b5fa2e] Decoder::decode(unsigned char*, char*, int, int*, char const*)+0x6e
                             (malloc=6KB type=Internal #3)

[0x00007f7aa1b6a085] Deoptimization::UnrollBlock::UnrollBlock(int, int, int, int, long*, unsigned char**, BasicType)+0x145
[0x00007f7aa1b6facb] Deoptimization::fetch_unroll_info_helper(JavaThread*)+0x103b
[0x00007f7aa1b7139a] Deoptimization::fetch_unroll_info(JavaThread*)+0x1a
[0x00007f7a8d047695]
                             (malloc=6KB type=Compiler #2)

[0x00007f7aa1b582f4] ConstantPool::allocate(ClassLoaderData*, int, Thread*)+0x124
[0x00007f7aa1f14f92] Method::make_method_handle_intrinsic(vmIntrinsics::ID, Symbol*, Thread*)+0xb2
[0x00007f7aa20bca2a] SystemDictionary::find_method_handle_intrinsic(vmIntrinsics::ID, Symbol*, Thread*)+0x8a
[0x00007f7aa1e4e35f] LinkResolver::lookup_polymorphic_method(methodHandle&, KlassHandle, Symbol*, Symbol*, KlassHandle, Handle*, Handle*, Thread*)+0xbf
                             (malloc=5KB type=Internal #45)

[0x00007f7aa1c81d3d] GenericGrowableArray::raw_allocate(int)+0x15d
[0x00007f7aa1f34a4e] MemberNameTable::MemberNameTable(int)+0x2e
[0x00007f7aa1cbe940] InstanceKlass::add_member_name(Handle, bool)+0x100
[0x00007f7aa1f2f82a] MethodHandles::init_method_MemberName(Handle, CallInfo&, bool)+0x1ca
                             (malloc=5KB type=Internal #92)

[0x00007f7aa20ebf9d] Thread::allocate(unsigned long, bool, MemoryType)+0x30d
[0x00007f7aa1c3ec1b] GCTaskManager::initialize()+0x34b
[0x00007f7aa1fb6d32] ParallelScavengeHeap::initialize()+0x3a2
[0x00007f7aa2112fca] Universe::initialize_heap()+0x16a
                             (malloc=5KB type=Thread #2)

[0x00007f7aa2049552] AdapterHandlerLibrary::get_adapter(methodHandle)+0xa42
[0x00007f7aa1f0f207] Method::link_method(methodHandle, Thread*) [clone .part.92]+0x277
[0x00007f7aa1cb9310] InstanceKlass::link_methods(Thread*)+0xb0
[0x00007f7aa1cb9a97] InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*)+0x487
                             (malloc=4KB type=Code #181)

[0x00007f7aa1c86575] BasicHashtable<(MemoryType)4>::new_entry(unsigned int)+0x175
[0x00007f7aa204898b] AdapterHandlerLibrary::initialize() [clone .part.63]+0x15b
[0x00007f7aa2049b75] AdapterHandlerLibrary::get_adapter(methodHandle)+0x1065
[0x00007f7aa1f0f207] Method::link_method(methodHandle, Thread*) [clone .part.92]+0x277
                             (malloc=4KB type=Code #1)

[0x00007f7aa2143562] vframeArray::allocate(JavaThread*, int, GrowableArray<compiledVFrame*>*, RegisterMap*, frame, frame, frame, bool)+0x262
[0x00007f7aa1b6f07b] Deoptimization::fetch_unroll_info_helper(JavaThread*)+0x5eb
[0x00007f7aa1b7139a] Deoptimization::fetch_unroll_info(JavaThread*)+0x1a
[0x00007f7a8d047695]
                             (malloc=4KB type=Compiler #2)

[0x00007f7aa20af4b5] Symbol::operator new(unsigned long, int, Thread*)+0xf5
[0x00007f7aa20b1a47] SymbolTable::basic_add(int, unsigned char*, int, unsigned int, bool, Thread*)+0xf7
[0x00007f7aa20b1ca4] SymbolTable::lookup(char const*, int, Thread*)+0x144
[0x00007f7aa1b67c3b] MethodFamily::generate_method_message(Symbol*, Method*, Thread*) const+0xbb
                             (malloc=3KB type=Symbol #37)

[0x00007f7aa1c81d3d] GenericGrowableArray::raw_allocate(int)+0x15d
[0x00007f7aa1fd90ec] PerfDataManager::add_item(PerfData*, bool)+0x18c
[0x00007f7aa1fda3f8] PerfDataManager::create_long_counter(CounterNS, char const*, PerfData::Units, long, Thread*)+0x128
[0x00007f7aa1afdcf5] CompilerCounters::CompilerCounters(char const*, int, Thread*) [clone .part.79]+0x155
                             (malloc=3KB type=Internal #1)

[0x00007f7aa1d6ce4a] JNIHandleBlock::allocate_block(Thread*)+0xaa
[0x00007f7aa1d0144a] JavaCallWrapper::JavaCallWrapper(methodHandle, Handle, JavaValue*, Thread*)+0x6a
[0x00007f7aa1d03eb0] JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)+0x8f0
[0x00007f7aa1cc0084] InstanceKlass::call_class_initializer_impl(instanceKlassHandle, Thread*)+0x104
                             (malloc=3KB type=Internal #10)

[0x00007f7aa196e9ec] LinuxAttachListener::read_request(int)+0x32c
[0x00007f7aa196ec17] LinuxAttachListener::dequeue()+0xd7
[0x00007f7aa196ecbe] AttachListener::dequeue()+0x8e
[0x00007f7aa196db35] attach_listener_thread_entry(JavaThread*, Thread*)+0xc5
                             (malloc=3KB type=Internal #1)

[0x00007f7aa1cbf67f] InstanceKlass::add_dependent_nmethod(nmethod*)+0x3f
[0x00007f7aa1f58a53] nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int)+0x263
[0x00007f7aa1a68691] ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState)+0x1b1
[0x00007f7aa19ab7ea] Compilation::compile_method()+0x27a
                             (malloc=3KB type=Class #129)

[0x00007f7aa20ebf9d] Thread::allocate(unsigned long, bool, MemoryType)+0x30d
[0x00007f7aa1b00b5f] CompileBroker::make_compiler_thread(char const*, CompileQueue*, CompilerCounters*, AbstractCompiler*, Thread*)+0x10f
[0x00007f7aa1b0337b] CompileBroker::init_compiler_threads(int, int)+0x45b
[0x00007f7aa1b035fe] CompileBroker::compilation_init()+0x6e
                             (malloc=3KB type=Thread #1)

[0x00007f7aa20ebf9d] Thread::allocate(unsigned long, bool, MemoryType)+0x30d
[0x00007f7aa1b00b5f] CompileBroker::make_compiler_thread(char const*, CompileQueue*, CompilerCounters*, AbstractCompiler*, Thread*)+0x10f
[0x00007f7aa1b0306b] CompileBroker::init_compiler_threads(int, int)+0x14b
[0x00007f7aa1b035fe] CompileBroker::compilation_init()+0x6e
                             (malloc=3KB type=Thread #1)

[0x00007f7aa20ebf9d] Thread::allocate(unsigned long, bool, MemoryType)+0x30d
[0x00007f7aa1f80a70] os::signal_init()+0x1c0
[0x00007f7aa20f6197] Threads::create_vm(JavaVMInitArgs*, bool*)+0xbb7
[0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
                             (malloc=3KB type=Thread #1)

[0x00007f7aa20ebf9d] Thread::allocate(unsigned long, bool, MemoryType)+0x30d
[0x00007f7aa20396c6] ServiceThread::initialize()+0x136
[0x00007f7aa1ecd5fc] Management::initialize(Thread*)+0x1c
[0x00007f7aa20f620e] Threads::create_vm(JavaVMInitArgs*, bool*)+0xc2e
                             (malloc=3KB type=Thread #1)

[0x00007f7aa20ebf9d] Thread::allocate(unsigned long, bool, MemoryType)+0x30d
[0x00007f7aa20f5762] Threads::create_vm(JavaVMInitArgs*, bool*)+0x182
[0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
[0x00007f7aa2c3eee4] JavaMain+0x84
                             (malloc=3KB type=Thread #1)

[0x00007f7aa20ebf9d] Thread::allocate(unsigned long, bool, MemoryType)+0x30d
[0x00007f7aa196d52e] AttachListener::init()+0x2ee
[0x00007f7aa196e57e] AttachListener::is_init_trigger()+0xce
[0x00007f7aa1f801a5] signal_thread_entry(JavaThread*, Thread*)+0x75
                             (malloc=3KB type=Thread #1)

[0x00007f7aa1cbe92c] InstanceKlass::add_member_name(Handle, bool)+0xec
[0x00007f7aa1f2f82a] MethodHandles::init_method_MemberName(Handle, CallInfo&, bool)+0x1ca
[0x00007f7aa1f3197d] MHN_resolve_Mem+0xc5d
[0x00007f7a8d0186c7]
                             (malloc=3KB type=Class #89)

[0x00007f7aa1b6a085] Deoptimization::UnrollBlock::UnrollBlock(int, int, int, int, long*, unsigned char**, BasicType)+0x145
[0x00007f7aa1b6facb] Deoptimization::fetch_unroll_info_helper(JavaThread*)+0x103b
                             (malloc=3KB type=Compiler #1)

[0x00007f7aa1b02e17] compileBroker_init()+0xa7
[0x00007f7aa1cae180] init_globals()+0xc0
[0x00007f7aa20f59e9] Threads::create_vm(JavaVMInitArgs*, bool*)+0x409
[0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
                             (malloc=3KB type=Internal #1)

[0x00007f7aa1be964c] Events::init() [clone .part.7]+0x2cc
[0x00007f7aa1cae0a3] vm_init_globals()+0x13
[0x00007f7aa20f574e] Threads::create_vm(JavaVMInitArgs*, bool*)+0x16e
[0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
                             (malloc=3KB type=Internal #1)

[0x00007f7aa1be9447] Events::init() [clone .part.7]+0xc7
[0x00007f7aa1cae0a3] vm_init_globals()+0x13
[0x00007f7aa20f574e] Threads::create_vm(JavaVMInitArgs*, bool*)+0x16e
[0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
                             (malloc=3KB type=Internal #1)

[0x00007f7aa1be974c] Events::init() [clone .part.7]+0x3cc
[0x00007f7aa1cae0a3] vm_init_globals()+0x13
[0x00007f7aa20f574e] Threads::create_vm(JavaVMInitArgs*, bool*)+0x16e
[0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
                             (malloc=3KB type=Internal #1)

[0x00007f7aa1be954c] Events::init() [clone .part.7]+0x1cc
[0x00007f7aa1cae0a3] vm_init_globals()+0x13
[0x00007f7aa20f574e] Threads::create_vm(JavaVMInitArgs*, bool*)+0x16e
[0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
                             (malloc=3KB type=Internal #1)

[0x00007f7aa20af4b5] Symbol::operator new(unsigned long, int, Thread*)+0xf5
[0x00007f7aa20b1a47] SymbolTable::basic_add(int, unsigned char*, int, unsigned int, bool, Thread*)+0xf7
[0x00007f7aa20b1ca4] SymbolTable::lookup(char const*, int, Thread*)+0x144
[0x00007f7aa1d11021] java_lang_invoke_MethodType::as_signature(oopDesc*, bool, Thread*)+0x91
                             (malloc=3KB type=Symbol #20)

[0x00007f7aa1b582f4] ConstantPool::allocate(ClassLoaderData*, int, Thread*)+0x124
[0x00007f7aa1ab2369] ClassFileParser::parse_constant_pool(Thread*)+0xf9
[0x00007f7aa1ab36f7] ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray<Handle>*, TempNewSymbol&, bool, Thread*)+0x587
[0x00007f7aa20bb057] SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, bool, Thread*)+0x1b7
                             (malloc=3KB type=Internal #22)

[0x00007f7aa1abd32a] ClassLoaderData::metaspace_non_null()+0x10a
[0x00007f7aa1f07dc3] Metaspace::allocate(ClassLoaderData*, unsigned long, bool, MetaspaceObj::Type, Thread*)+0x43
[0x00007f7aa1b58211] ConstantPool::allocate(ClassLoaderData*, int, Thread*)+0x41
[0x00007f7aa1ab2369] ClassFileParser::parse_constant_pool(Thread*)+0xf9
                             (malloc=3KB type=Class #81)

[0x00007f7aa20ebf9d] Thread::allocate(unsigned long, bool, MemoryType)+0x30d
[0x00007f7aa21541e1] VMThread::create()+0x21
[0x00007f7aa20f589a] Threads::create_vm(JavaVMInitArgs*, bool*)+0x2ba
[0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
                             (malloc=2KB type=Thread #1)

[0x00007f7aa20ebf9d] Thread::allocate(unsigned long, bool, MemoryType)+0x30d
[0x00007f7aa20f6314] Threads::create_vm(JavaVMInitArgs*, bool*)+0xd34
[0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
[0x00007f7aa2c3eee4] JavaMain+0x84
                             (malloc=2KB type=Thread #1)

[0x00007f7aa2048a2d] AdapterHandlerLibrary::initialize() [clone .part.63]+0x1fd
[0x00007f7aa2049b75] AdapterHandlerLibrary::get_adapter(methodHandle)+0x1065
[0x00007f7aa1f0f207] Method::link_method(methodHandle, Thread*) [clone .part.92]+0x277
[0x00007f7aa1cb9310] InstanceKlass::link_methods(Thread*)+0xb0
                             (malloc=2KB type=Code #1)

[0x00007f7aa1c851d5] BasicHashtable<(MemoryType)1>::new_entry(unsigned int)+0x175
[0x00007f7aa1ab7634] ClassLoader::add_package(char const*, int, Thread*)+0x1d4
[0x00007f7aa1ac1b0f] ClassLoaderExt::record_result(ClassLoaderExt::Context*, int, ClassPathEntry*, instanceKlassHandle, Thread*)+0xcf
[0x00007f7aa1abaf1f] ClassLoader::load_classfile(Symbol*, Thread*)+0x57f
                             (malloc=2KB type=Class #5)

[0x00007f7aa1cbf67f] InstanceKlass::add_dependent_nmethod(nmethod*)+0x3f
[0x00007f7aa1f58a53] nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int)+0x263
[0x00007f7aa1a68691] ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState)+0x1b1
[0x00007f7aa1afc388] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)+0xe58
                             (malloc=2KB type=Class #95)

[0x00007f7aa1d6ce4a] JNIHandleBlock::allocate_block(Thread*)+0xaa
[0x00007f7aa20f7c95] JavaThread::run()+0x275
[0x00007f7aa1f898c2] java_start(Thread*)+0x102
                             (malloc=2KB type=Internal #7)

[0x00007f7aa1b03ec2] CompileBroker::create_compile_task(CompileQueue*, int, methodHandle, int, int, methodHandle, int, char const*, bool)+0x452
[0x00007f7aa1b04bcf] CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*)+0x9ef
[0x00007f7aa1b05d26] CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*)+0x976
[0x00007f7aa1939dab] AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*)+0x11b
                             (malloc=2KB type=Compiler #17)

[0x00007f7aa1c85aa5] BasicHashtable<(MemoryType)9>::new_entry(unsigned int)+0x175
[0x00007f7aa1c85af1] Hashtable<Symbol*, (MemoryType)9>::new_entry(unsigned int, Symbol*)+0x11
[0x00007f7aa1bc7f76] SymbolPropertyTable::add_entry(int, unsigned int, Symbol*, long)+0x26
[0x00007f7aa20bd9b5] SystemDictionary::find_method_handle_type(Symbol*, KlassHandle, Thread*)+0x945
                             (malloc=2KB type=Symbol #1)

[0x00007f7aa1c851d5] BasicHashtable<(MemoryType)1>::new_entry(unsigned int)+0x175
[0x00007f7aa1c85241] Hashtable<Klass*, (MemoryType)1>::new_entry(unsigned int, Klass*)+0x11
[0x00007f7aa1e5b31d] LoaderConstraintTable::add_entry(Symbol*, Klass*, Handle, Klass*, Handle)+0x6ad
[0x00007f7aa20bc6d1] SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*)+0x261
                             (malloc=2KB type=Class #1)

[0x00007f7aa1c85aa5] BasicHashtable<(MemoryType)9>::new_entry(unsigned int)+0x175
[0x00007f7aa1c85af1] Hashtable<Symbol*, (MemoryType)9>::new_entry(unsigned int, Symbol*)+0x11
[0x00007f7aa1bc7f76] SymbolPropertyTable::add_entry(int, unsigned int, Symbol*, long)+0x26
[0x00007f7aa20bcec4] SystemDictionary::find_method_handle_intrinsic(vmIntrinsics::ID, Symbol*, Thread*)+0x524
                             (malloc=2KB type=Symbol #1)

[0x00007f7aa1b03ed4] CompileBroker::create_compile_task(CompileQueue*, int, methodHandle, int, int, methodHandle, int, char const*, bool)+0x464
[0x00007f7aa1b04bcf] CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*)+0x9ef
[0x00007f7aa1b05d26] CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*)+0x976
[0x00007f7aa1939dab] AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*)+0x11b
                             (malloc=2KB type=Internal #17)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19419d0] Arena::Arena(MemoryType)+0x30
[0x00007f7aa1ad30d4] CodeBuffer::create_patch_overflow()+0x184
[0x00007f7aa19560c3] Label::add_patch_at(CodeBuffer*, int)+0x103
                             (malloc=2KB type=Arena Chunk #2)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19419d0] Arena::Arena(MemoryType)+0x30
[0x00007f7aa20f3bc6] NamedThread::NamedThread()+0xe6
[0x00007f7aa1c3f950] GCTaskThread::GCTaskThread(GCTaskManager*, unsigned int, unsigned int)+0x20
                             (malloc=2KB type=Arena Chunk #2)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19419d0] Arena::Arena(MemoryType)+0x30
[0x00007f7aa20f5040] JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned long)+0xf0
[0x00007f7aa1d74ab5] JVM_StartThread+0x105
                             (malloc=2KB type=Arena Chunk #2)

[0x00007f7aa1942f0d] ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)+0x10d
[0x00007f7aa19419d0] Arena::Arena(MemoryType)+0x30
[0x00007f7aa20f42c0] CompilerThread::CompilerThread(CompileQueue*, CompilerCounters*)+0xf0
[0x00007f7aa1b00b7b] CompileBroker::make_compiler_thread(char const*, CompileQueue*, CompilerCounters*, AbstractCompiler*, Thread*)+0x12b
                             (malloc=2KB type=Arena Chunk #2)

[0x00007f7aa2143562] vframeArray::allocate(JavaThread*, int, GrowableArray<compiledVFrame*>*, RegisterMap*, frame, frame, frame, bool)+0x262
[0x00007f7aa1b6f07b] Deoptimization::fetch_unroll_info_helper(JavaThread*)+0x5eb
                             (malloc=2KB type=Compiler #1)

[0x00007f7aa1acf7ed] CodeBlob::set_oop_maps(OopMapSet*) [clone .part.5]+0xed
[0x00007f7aa1acfbe3] CodeBlob::CodeBlob(char const*, CodeBuffer*, int, int, int, int, OopMapSet*)+0xe3
[0x00007f7aa1f50ff5] nmethod::nmethod(Method*, int, int, CodeOffsets*, CodeBuffer*, int, int, int, OopMapSet*)+0x45
[0x00007f7aa1f51c98] nmethod::new_native_nmethod(methodHandle, int, CodeBuffer*, int, int, int, int, int, OopMapSet*)+0x198
                             (malloc=2KB type=Code #20)

[0x00007f7aa1c81d3d] GenericGrowableArray::raw_allocate(int)+0x15d
[0x00007f7aa1f34aec] MemberNameTable::add_member_name(_jobject*)+0x5c
[0x00007f7aa1cbe8db] InstanceKlass::add_member_name(Handle, bool)+0x9b
[0x00007f7aa1f2f82a] MethodHandles::init_method_MemberName(Handle, CallInfo&, bool)+0x1ca
                             (malloc=1KB type=Internal #1)

[0x00007f7aa2003e6d] PaddedArray<PSPromotionManager, (MemoryType)5, 64ul>::create_unfreeable(unsigned int)+0x12d
[0x00007f7aa2002ff8] PSPromotionManager::initialize()+0x48
[0x00007f7aa2111a9a] universe_post_init()+0x9aa
[0x00007f7aa1cae18a] init_globals()+0xca
                             (malloc=1KB type=GC #1)

[0x00007f7aa1ab84ba] ClassLoader::create_class_path_entry(char const*, stat const*, bool, bool, Thread*)+0x27a
[0x00007f7aa1ab8d32] ClassLoader::setup_search_path(char const*, bool)+0x262
[0x00007f7aa1aba6ff] ClassLoader::initialize()+0x7ff
[0x00007f7aa1cae0f7] init_globals()+0x37
                             (malloc=1KB type=Class #6)

[0x00007f7aa1bc7ead] SymbolPropertyTable::SymbolPropertyTable(int)+0x12d
[0x00007f7aa20c1d1d] SystemDictionary::initialize(Thread*)+0xfd
[0x00007f7aa2110068] Universe::genesis(Thread*)+0x3b8
[0x00007f7aa21110ac] universe2_init()+0x2c
                             (malloc=1KB type=Symbol #1)

[0x00007f7aa214ac84] ReservedHeapSpace::ReservedHeapSpace(unsigned long, unsigned long, bool, char*)+0xb4
[0x00007f7aa211296f] Universe::reserve_heap(unsigned long, unsigned long)+0x3bf
[0x00007f7aa1fb6a71] ParallelScavengeHeap::initialize()+0xe1
[0x00007f7aa2112fca] Universe::initialize_heap()+0x16a
                             (reserved=2146304KB, committed=2146304KB)

[0x00007f7aa214b1e7] ReservedCodeSpace::ReservedCodeSpace(unsigned long, unsigned long, bool)+0x77
[0x00007f7aa1c87801] CodeHeap::reserve(unsigned long, unsigned long, unsigned long)+0xd1
[0x00007f7aa1ad720a] codeCache_init()+0x7a
[0x00007f7aa1cae0fc] init_globals()+0x3c
                             (reserved=245760KB, committed=2496KB)

[0x00007f7aa214a021] ReservedSpace::ReservedSpace(unsigned long, unsigned long, bool, char*, unsigned long)+0x91
[0x00007f7aa1f081bf] Metaspace::allocate_metaspace_compressed_klass_ptrs(char*, unsigned char*)+0x4f
[0x00007f7aa1f08c74] Metaspace::global_initialize()+0x574
[0x00007f7aa21132e1] universe_init()+0x61
                             (reserved=131072KB, committed=640KB)

[0x00007f7aa214a13d] ReservedSpace::ReservedSpace(unsigned long, unsigned long, bool, char*, unsigned long)+0x1ad
[0x00007f7aa1fad089] ParMarkBitMap::initialize(MemRegion)+0xa9
[0x00007f7aa2000afe] PSParallelCompact::initialize()+0x16e
[0x00007f7aa1fb6d65] ParallelScavengeHeap::initialize()+0x3d5
                             (reserved=67072KB, committed=67072KB)

[0x00007f7aa214a13d] ReservedSpace::ReservedSpace(unsigned long, unsigned long, bool, char*, unsigned long)+0x1ad
[0x00007f7aa1efecae] VirtualSpaceNode::VirtualSpaceNode(unsigned long)+0x16e
[0x00007f7aa1f0471b] VirtualSpaceList::create_new_virtual_space(unsigned long) [clone .part.64]+0x3b
[0x00007f7aa1f08ceb] Metaspace::global_initialize()+0x5eb
                             (reserved=8192KB, committed=4608KB)

[0x00007f7aa1f898c2] java_start(Thread*)+0x102
                             (reserved=7184KB, committed=7184KB)

[0x00007f7aa214a13d] ReservedSpace::ReservedSpace(unsigned long, unsigned long, bool, char*, unsigned long)+0x1ad
[0x00007f7aa1a4e964] CardTableModRefBS::initialize()+0xf4
[0x00007f7aa1fb6b37] ParallelScavengeHeap::initialize()+0x1a7
[0x00007f7aa2112fca] Universe::initialize_heap()+0x16a
                             (reserved=4196KB, committed=4196KB)

[0x00007f7aa214a13d] ReservedSpace::ReservedSpace(unsigned long, unsigned long, bool, char*, unsigned long)+0x1ad
[0x00007f7aa2000820] ParallelCompactData::create_vspace(unsigned long, unsigned long)+0x80
[0x00007f7aa2000b69] PSParallelCompact::initialize()+0x1d9
[0x00007f7aa1fb6d65] ParallelScavengeHeap::initialize()+0x3d5
                             (reserved=4192KB, committed=4192KB)

[0x00007f7aa2149e5a] ReservedSpace::ReservedSpace(unsigned long, unsigned long)+0x10a
[0x00007f7aa1c8791e] CodeHeap::reserve(unsigned long, unsigned long, unsigned long)+0x1ee
[0x00007f7aa1ad720a] codeCache_init()+0x7a
[0x00007f7aa1cae0fc] init_globals()+0x3c
                             (reserved=3840KB, committed=40KB)

[0x00007f7aa2149e5a] ReservedSpace::ReservedSpace(unsigned long, unsigned long)+0x10a
[0x00007f7aa1f77c94] ObjectStartArray::initialize(MemRegion)+0x44
[0x00007f7aa1ff8c27] PSOldGen::initialize_work(char const*, int)+0x47
[0x00007f7aa1ff8f5d] PSOldGen::initialize(ReservedSpace, unsigned long, char const*, int)+0xad
                             (reserved=2796KB, committed=2796KB)

[0x00007f7aa1c3f60c] GCTaskThread::run()+0x1c
[0x00007f7aa1f898c2] java_start(Thread*)+0x102
                             (reserved=2048KB, committed=2048KB)

[0x00007f7aa196da99] attach_listener_thread_entry(JavaThread*, Thread*)+0x29
[0x00007f7aa20f79eb] JavaThread::thread_main_inner()+0xdb
[0x00007f7aa20f7cf1] JavaThread::run()+0x2d1
[0x00007f7aa1f898c2] java_start(Thread*)+0x102
                             (reserved=1028KB, committed=1028KB)

[0x00007f7aa2154dad] VMThread::run()+0x1d
[0x00007f7aa1f898c2] java_start(Thread*)+0x102
                             (reserved=1024KB, committed=1024KB)

[0x00007f7aa20f5787] Threads::create_vm(JavaVMInitArgs*, bool*)+0x1a7
[0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
[0x00007f7aa2c3eee4] JavaMain+0x84
                             (reserved=1024KB, committed=1024KB)

[0x00007f7aa214a13d] ReservedSpace::ReservedSpace(unsigned long, unsigned long, bool, char*, unsigned long)+0x1ad
[0x00007f7aa2000820] ParallelCompactData::create_vspace(unsigned long, unsigned long)+0x80
[0x00007f7aa2000b2f] PSParallelCompact::initialize()+0x19f
[0x00007f7aa1fb6d65] ParallelScavengeHeap::initialize()+0x3d5
                             (reserved=164KB, committed=164KB)

[0x00007f7aa1fdc841] PerfMemory::create_memory_region(unsigned long)+0xa41
[0x00007f7aa1fdb24a] perfMemory_init()+0x4a
[0x00007f7aa20f574e] Threads::create_vm(JavaVMInitArgs*, bool*)+0x16e
[0x00007f7aa1d53c8f] JNI_CreateJavaVM+0x4f
                             (reserved=32KB, committed=32KB)

